name: "CF CLI Action"
description: "Deploy and manage Cloud Foundry using the cf cli"
branding:
  icon: "upload-cloud"
  color: "blue"
inputs:
  cf_api:
    description: "Target API Endpoint of Cloud Foundry"
    required: true
  cf_username:
    description: "Username for API authentication"
    required: true
  cf_password:
    description: "Password for API authentication"
    required: true
  cf_org:
    description: "Target Organization"
    required: false
  cf_space:
    description: "Target Space"
    required: false
  command:
    description: "Command to run using CF CLI"
    required: true
runs:
  using: 'composite'
  steps:
    - name: Install cf
      shell: bash
      run: | 
        if [ "$(id --user)" -eq "0" ]; then
            sudocmd=""
        else
            sudocmd="sudo"
        fi

        $sudocmd apt-get --quiet update --assume-yes || true
        $sudocmd apt-get --quiet install --assume-yes ca-certificates jq
        echo "deb [trusted=yes] https://packages.cloudfoundry.org/debian stable main" |  $sudocmd dd of=/etc/apt/sources.list.d/cloudfoundry-cli.list
        $sudocmd apt-get update
        $sudocmd apt-get install -y cf8-cli
    - name: Connect and launch cf
      shell: bash
      run: | 
        if [ "$(id --user)" -eq "0" ]; then
            sudocmd=""
        else
            sudocmd="sudo"
        fi

        $sudocmd cf install-plugin multiapps -f
        $sudocmd cf api "${{ inputs.cf_api }}"
        if [ -n "${{ inputs.cf_origin }}" ]; then
          $sudocmd cf auth "${{ inputs.cf_username }}" "${{ inputs.cf_password }}" --origin "${{ inputs.cf_origin }}"
        else
          $sudocmd cf auth "${{ inputs.cf_username }}" "${{ inputs.cf_password }}"
        fi

        if [ -n "${{ inputs.cf_org }}" ] && [ -n "${{ inputs.cf_space }}" ]; then
          $sudocmd cf target -o "${{ inputs.cf_org }}" -s "${{ inputs.cf_space }}"
        fi

        $sudocmd cf ${{ inputs.command }}
        

